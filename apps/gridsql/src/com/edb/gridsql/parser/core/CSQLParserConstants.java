/* Generated By:JavaCC: Do not edit this line. CSQLParserConstants.java */
package com.edb.gridsql.parser.core;

public interface CSQLParserConstants {

  int EOF = 0;
  int COMMENT_LINE = 5;
  int COMMENT_BLOCK = 6;
  int CREATE_ = 7;
  int COPY_ = 8;
  int TABLE_ = 9;
  int TABLESPACE_ = 10;
  int LOCATION_ = 11;
  int TEMP_ = 12;
  int NULL_ = 13;
  int UNIQUE_ = 14;
  int SET_ = 15;
  int DEFAULT_ = 16;
  int UNSIGNED_ = 17;
  int ZEROFILL_ = 18;
  int BINARY_ = 19;
  int CONSTRAINT_ = 20;
  int PRIMARYKEY_ = 21;
  int FOREIGNKEY_ = 22;
  int REFERENCES_ = 23;
  int ON_ = 24;
  int UPDATE_ = 25;
  int DELETE_ = 26;
  int PARTITIONINGKEY_ = 27;
  int ROUND_ROBIN_ = 28;
  int WITH_XROWID_ = 29;
  int WITHOUT_XROWID_ = 30;
  int PARENT_ = 31;
  int PARTITION_WITH_ = 32;
  int REPLICATED_ = 33;
  int NODE_ = 34;
  int ADD_NODE_ = 35;
  int MANUAL_ = 36;
  int DROP_NODE_ = 37;
  int START_DB_ = 38;
  int WAIT_TIMEOUT_ = 39;
  int STOP_DB_ = 40;
  int CREATE_DB_ = 41;
  int DROP_DB_ = 42;
  int SHUT_DOWN_ = 43;
  int WITH_ = 44;
  int OWNER_ = 45;
  int FORCE_ = 46;
  int NODES_ = 47;
  int SERIAL_ = 48;
  int BIGSERIAL_ = 49;
  int DROP_ = 50;
  int INSERT_ = 51;
  int UNION_ = 52;
  int COLUMN_ = 53;
  int FIRST_ = 54;
  int AFTER_ = 55;
  int ALTER_ = 56;
  int MODIFY_ = 57;
  int ADD_ = 58;
  int CHECK_ = 59;
  int RENAME_ = 60;
  int TO_ = 61;
  int UPDATE_STAT_ = 62;
  int STATISTICS_ = 63;
  int FOR_ = 64;
  int SHOW_ = 65;
  int SHOW_AGENTS_ = 66;
  int SHOW_STATEMENTS_ = 67;
  int SHOW_DATABASES_ = 68;
  int SHOW_TABLES_ = 69;
  int SHOW_TRAN_ISOLATION_ = 70;
  int SERIALIZABLE_ = 71;
  int REPEATABLE_READ_ = 72;
  int READ_COMMITTED_ = 73;
  int READ_UNCOMMITTED_ = 74;
  int ISOLATION_LEVEL_ = 75;
  int BEGIN_ = 76;
  int ROLLBACK_ = 77;
  int COMMIT_ = 78;
  int TRANSACTION_ = 79;
  int TRAN_ = 80;
  int WORK_ = 81;
  int SHOW_CONSTRAINTS_ = 82;
  int DESCRIBE_ = 83;
  int KILL_ = 84;
  int PASSWORD_ = 85;
  int DBA_ = 86;
  int RESOURCE_ = 87;
  int STANDARD_ = 88;
  int PUBLIC_ = 89;
  int GRANT_ = 90;
  int REVOKE_ = 91;
  int OWNER_TO_ = 92;
  int CAST_ = 93;
  int VIEW_ = 94;
  int SHOW_TABLE_ = 95;
  int SHOW_VIEW_ = 96;
  int SHOW_VIEWS_ = 97;
  int SHOW_USERS_ = 98;
  int INHERITS_ = 99;
  int NO_ = 100;
  int INHERIT_ = 101;
  int VACUUM_ = 102;
  int ANALYZE_ = 103;
  int VERBOSE_ = 104;
  int FREEZE_ = 105;
  int LIMIT_ = 106;
  int OFFSET_ = 107;
  int CLUSTER_ = 108;
  int EXEC_ = 109;
  int DIRECT_ = 110;
  int EXPLAIN_ = 111;
  int OIDS_ = 112;
  int DELIMITER_ = 113;
  int CSV_ = 114;
  int QUOTE_STRING_ = 115;
  int STDIN_ = 116;
  int STDOUT_ = 117;
  int FORCE_NOT_NULL_ = 118;
  int FORCE_QUOTE_ = 119;
  int DEALLOCATE_ = 120;
  int PREPARE_ = 121;
  int LOCAL_ = 122;
  int GLOBAL_ = 123;
  int ON_COMMIT_ = 124;
  int PRESERVE_ROWS_ = 125;
  int DELETE_ROWS_ = 126;
  int UNLISTEN_ = 127;
  int SELECT_ = 128;
  int ALL_ = 129;
  int DISTINCT_ = 130;
  int AS_ = 131;
  int INTO_ = 132;
  int WHERE_ = 133;
  int FROM_ = 134;
  int GROUP_BY_ = 135;
  int IN_ = 136;
  int BETWEEN_ = 137;
  int EXISTS_ = 138;
  int ANY_ = 139;
  int SOME_ = 140;
  int NOT_ = 141;
  int AND_ = 142;
  int IS_ = 143;
  int OR_ = 144;
  int LIKE_ = 145;
  int ILIKE_ = 146;
  int SIMILAR_TO_ = 147;
  int ESCAPE_ = 148;
  int OVERLAPS_ = 149;
  int CASE_ = 150;
  int THEN_ = 151;
  int END_ = 152;
  int WHEN_ = 153;
  int ELSE_ = 154;
  int CROSS_ = 155;
  int JOIN_ = 156;
  int INNER_ = 157;
  int OUTER_ = 158;
  int FULL_ = 159;
  int USING_ = 160;
  int TRUE_ = 161;
  int FALSE_ = 162;
  int TEMPDOT_ = 163;
  int PUBLICDOT_ = 164;
  int NATURAL_ = 165;
  int LEFTOUTER_ = 166;
  int QPUBLICDOT_ = 167;
  int PLUS_ = 168;
  int MINUS_ = 169;
  int UNARY_SIGN_ = 170;
  int SQUARE_ROOT_ = 171;
  int CUBE_ROOT_ = 172;
  int FACTORIAL_ = 173;
  int FACTORIAL_PREFIX_ = 174;
  int ABSOLUTE_ = 175;
  int AND_BITWISE_ = 176;
  int OR_BITWISE_ = 177;
  int XOR_BITWISE_ = 178;
  int SHIFT_LEFT_BITWISE_ = 179;
  int SHIFT_RIGHT_BITWISE_ = 180;
  int NOT_BITWISE_ = 181;
  int REGEX_MATCHES_CASE_INSTV_ = 182;
  int REGEX_NOT_MATCHES_ = 183;
  int REGEX_NOT_MATCHES_CASE_INSTV_ = 184;
  int BOTH = 185;
  int LEADING = 186;
  int TRAILING = 187;
  int CONCAT_ = 188;
  int DIVIDE_ = 189;
  int DIV_ = 190;
  int MOD_ = 191;
  int MODULO_ = 192;
  int MODULE_ = 193;
  int ASC_ = 194;
  int DESC_ = 195;
  int ORDER_BY_ = 196;
  int HAVING_ = 197;
  int CONTAINED_WITHIN_OR_EQUALS_ = 198;
  int CONTAINS_OR_EQUALS_ = 199;
  int AVERAGE_ = 200;
  int SQRT_ = 201;
  int COUNT_ = 202;
  int EXTRACT_ = 203;
  int MAX_ = 204;
  int CURRENTDATE_ = 205;
  int CURRENT_TIME_ = 206;
  int CURRENT_TIMESTAMP_ = 207;
  int TRUNC_ = 208;
  int TRUNCATE_ = 209;
  int CURRENT_USER_ = 210;
  int USER_ = 211;
  int YEAR_ = 212;
  int LENGTH_ = 213;
  int LOWER_ = 214;
  int MONTH_ = 215;
  int HOUR_ = 216;
  int MINUTE_ = 217;
  int SECOND_ = 218;
  int SUBSTRING_ = 219;
  int TEMPORARY_ = 220;
  int NOW_ = 221;
  int ADDDATE_ = 222;
  int ADDTIME_ = 223;
  int DAYNAME_ = 224;
  int SUBDATE_ = 225;
  int SUBTIME_ = 226;
  int DATEDIFF_ = 227;
  int MONTHNAME_ = 228;
  int DAYOFWEEK_ = 229;
  int DAYOFYEAR_ = 230;
  int DAYOFMONTH_ = 231;
  int WEEKOFYEAR_ = 232;
  int DAY_ = 233;
  int QUARTER_ = 234;
  int WEEK_ = 235;
  int ABS_ = 236;
  int CEIL_ = 237;
  int CEILING_ = 238;
  int EXP_ = 239;
  int FLOOR_ = 240;
  int LN_ = 241;
  int LOG_ = 242;
  int LOG10_ = 243;
  int PI_ = 244;
  int POWER_ = 245;
  int ROUND_ = 246;
  int SIGN_ = 247;
  int ASIN_ = 248;
  int ATAN_ = 249;
  int ATAN2_ = 250;
  int ATN2_ = 251;
  int COS_ = 252;
  int ACOS_ = 253;
  int COSH_ = 254;
  int COT_ = 255;
  int DEGREE_ = 256;
  int RADIANS_ = 257;
  int SIN_ = 258;
  int TAN_ = 259;
  int DATABASE_ = 260;
  int VALUE_ = 261;
  int VERSION_ = 262;
  int MIN_ = 263;
  int STDDEV_ = 264;
  int STDDEV_POP_ = 265;
  int STDDEV_SAMP_ = 266;
  int SUM_ = 267;
  int VARIANCE_ = 268;
  int VARIANCE_POP_ = 269;
  int VARIANCE_SAMP_ = 270;
  int ASCII_ = 271;
  int INDEX_ = 272;
  int SHOW_INDEXES_ = 273;
  int LEFT_ = 274;
  int LPAD_ = 275;
  int RPAD_ = 276;
  int LTRIM_ = 277;
  int REPLACE_ = 278;
  int RIGHT_ = 279;
  int RTRIM_ = 280;
  int SUBSTR_ = 281;
  int TRIM_ = 282;
  int UPPER_ = 283;
  int FIXED_ = 284;
  int GREATEST_ = 285;
  int LEAST_ = 286;
  int INSTR_ = 287;
  int SOUNDEX_ = 288;
  int INITCAP_ = 289;
  int LFILL_ = 290;
  int MAPCHAR_ = 291;
  int NUM_ = 292;
  int CONCAT_WORD = 293;
  int CURTIME_ = 294;
  int CURDATE_ = 295;
  int TIMEOFDAY_ = 296;
  int ISFINITE_ = 297;
  int DATETRUNC_ = 298;
  int DATEPART_ = 299;
  int AGE_ = 300;
  int LOCALTIME_ = 301;
  int LOCALTIMESTAMP_ = 302;
  int BIT_LENGTH_ = 303;
  int CHAR_LENGTH_ = 304;
  int CHARACTER_LENGTH_ = 305;
  int CONVERT_ = 306;
  int OCTET_LENGTH_ = 307;
  int OVERLAY_ = 308;
  int PLACING_ = 309;
  int STORAGE_ = 310;
  int TYPE_ = 311;
  int BTRIM_ = 312;
  int CHR_ = 313;
  int DECODE_ = 314;
  int ENCODE_ = 315;
  int MD5_ = 316;
  int PG_CLIENT_ENCODING_ = 317;
  int QUOTE_IDENT_ = 318;
  int QUOTE_LITERAL_ = 319;
  int REPEAT_ = 320;
  int SPLIT_PART_ = 321;
  int STRPOS_ = 322;
  int TO_ASCII_ = 323;
  int TO_HEX_ = 324;
  int TRANSLATE_ = 325;
  int WIDTH_BUCKET_ = 326;
  int SETSEED_ = 327;
  int RANDOM_ = 328;
  int CBRT_ = 329;
  int GET_BIT_ = 330;
  int GET_BYTE_ = 331;
  int TO_DATE_ = 332;
  int NVL_ = 333;
  int NVL2_ = 334;
  int COALESCE_ = 335;
  int CLOCK_TIMESTAMP_ = 336;
  int STATEMENT_TIMESTAMP_ = 337;
  int TRANSACTION_TIMESTAMP_ = 338;
  int NULLIF_ = 339;
  int SET_BIT_ = 340;
  int SET_BYTE_ = 341;
  int TO_CHAR_ = 342;
  int TO_NUMBER_ = 343;
  int TO_TIMESTAMP_ = 344;
  int ADD_MONTHS_ = 345;
  int JUSTIFY_DAYS_ = 346;
  int JUSTIFY_HOURS_ = 347;
  int JUSTIFY_INTERVAL_ = 348;
  int LAST_DAY_ = 349;
  int MONTHS_BETWEEN_ = 350;
  int NEXT_DAY_ = 351;
  int CURRENT_DATABASE_ = 352;
  int CURRENT_SCHEMA_ = 353;
  int SYSDATE_ = 354;
  int BIT_AND_ = 355;
  int BIT_OR_ = 356;
  int BOOL_AND_ = 357;
  int BOOL_OR_ = 358;
  int EVERY_ = 359;
  int CORR_ = 360;
  int COVAR_POP_ = 361;
  int COVAR_SAMP_ = 362;
  int REGR_AVGX_ = 363;
  int REGR_AVGY_ = 364;
  int REGR_COUNT_ = 365;
  int REGR_INTERCEPT_ = 366;
  int REGR_R2_ = 367;
  int REGR_SLOPE_ = 368;
  int REGR_SXX_ = 369;
  int REGR_SXY_ = 370;
  int REGR_SYY_ = 371;
  int REGEXP_REPLACE_ = 372;
  int ABBREV_ = 373;
  int BROADCAST_ = 374;
  int FAMILY_ = 375;
  int HOST_ = 376;
  int HOSTMASK_ = 377;
  int MASKLEN_ = 378;
  int NETMASK_ = 379;
  int NETWORK_ = 380;
  int SET_MASKLEN_ = 381;
  int SMALLINT_ = 382;
  int TINYINT_ = 383;
  int INT2_ = 384;
  int BIGINT_ = 385;
  int INT8_ = 386;
  int BIGINTEGER_ = 387;
  int INT_ = 388;
  int INTEGER_ = 389;
  int INT4_ = 390;
  int REAL_ = 391;
  int SMALLFLOAT_ = 392;
  int FLOAT_ = 393;
  int FLOAT4_ = 394;
  int FLOAT8_ = 395;
  int DECIMAL_ = 396;
  int NUMERIC_ = 397;
  int SMALLMONEY_ = 398;
  int MONEY_ = 399;
  int NUMBER_ = 400;
  int CHAR_ = 401;
  int CHARACHTER_ = 402;
  int VARCHAR_ = 403;
  int TINYTEXT_ = 404;
  int VARCHAR2_ = 405;
  int DATE_ = 406;
  int TIME_ = 407;
  int TIMESTAMP_ = 408;
  int WITH_TIMEZONE_ = 409;
  int WITHOUT_TIMEZONE_ = 410;
  int DATETIME_ = 411;
  int SAMLLDATETIME_ = 412;
  int DEC_ = 413;
  int DOUBLE_PRECISION_ = 414;
  int NCHAR_ = 415;
  int NATIONAL_ = 416;
  int VARYING_ = 417;
  int BOOLEAN_ = 418;
  int INTERVAL_ = 419;
  int TEXT_ = 420;
  int MEDIUMTEXT_ = 421;
  int LONG_ = 422;
  int LVARCHAR_ = 423;
  int LONG_VARCHAR_ = 424;
  int LONGTEXT_ = 425;
  int CLOB_ = 426;
  int BYTEA_ = 427;
  int BLOB_ = 428;
  int VARBINARY_ = 429;
  int LONG_RAW_ = 430;
  int RAW_ = 431;
  int BYTE_ = 432;
  int IMAGE_ = 433;
  int BIT_ = 434;
  int BITVARYING_ = 435;
  int VARBIT_ = 436;
  int QUOTE = 437;
  int MACADDR_ = 438;
  int CIDR_ = 439;
  int INET_ = 440;
  int YEAR_FROM = 441;
  int QUARTER_FROM = 442;
  int MONTH_FROM = 443;
  int WEEK_FROM = 444;
  int DAY_FROM = 445;
  int DOY_FROM = 446;
  int DOW_FROM = 447;
  int DECADE_FROM = 448;
  int CENTURY_FROM = 449;
  int HOUR_FROM = 450;
  int MINUTE_FROM = 451;
  int SECOND_FROM = 452;
  int MILLISECOND_FROM = 453;
  int MILLENNIUM_FROM = 454;
  int MICROSECONDS_FROM = 455;
  int EPOCH_FROM = 456;
  int POSITION_ = 457;
  int VALUES_ = 458;
  int SINGLEDIGIT = 459;
  int INT_LITERAL = 460;
  int DECIMAL_LITERAL = 461;
  int SCIENTIFIC_LITERAL = 462;
  int STRING_LITERAL = 463;
  int PARAM_PLACE_HOLDER = 464;
  int INTERVAL_LITERAL = 465;
  int DATE_LITERAL = 466;
  int TIME_LITERAL = 467;
  int TIMESTAMP_LITERAL = 468;
  int TEXT_LITERAL = 469;
  int INTEGER_LITERAL = 470;
  int MACADDR_LITERAL = 471;
  int CIDR_LITERAL = 472;
  int INET_LITERAL = 473;
  int BINARY_LITERAL = 474;
  int HEXDECIMAL_LITERAL = 475;
  int PARENTHESIS_START_ = 476;
  int PARENTHESIS_CLOSE_ = 477;
  int SEMICOLON_ = 478;
  int STAR_ = 479;
  int LETTER = 480;
  int IDENTIFIER = 481;
  int QUOTED_IDENTIFIER = 482;

  int DEFAULT = 0;

  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\t\"",
    "<COMMENT_LINE>",
    "<COMMENT_BLOCK>",
    "\"CREATE\"",
    "\"COPY\"",
    "\"TABLE\"",
    "\"TABLESPACE\"",
    "\"LOCATION\"",
    "\"TEMP\"",
    "\"NULL\"",
    "\"UNIQUE\"",
    "\"SET\"",
    "\"DEFAULT\"",
    "\"UNSIGNED\"",
    "\"ZEROFILL\"",
    "\"BINARY\"",
    "\"CONSTRAINT\"",
    "<PRIMARYKEY_>",
    "<FOREIGNKEY_>",
    "\"REFERENCES\"",
    "\"ON\"",
    "\"UPDATE\"",
    "\"DELETE\"",
    "<PARTITIONINGKEY_>",
    "<ROUND_ROBIN_>",
    "<WITH_XROWID_>",
    "<WITHOUT_XROWID_>",
    "\"PARENT\"",
    "<PARTITION_WITH_>",
    "\"REPLICATED\"",
    "\"NODE\"",
    "\"ADD NODE\"",
    "\"MANUAL\"",
    "\"DROP NODE\"",
    "<START_DB_>",
    "<WAIT_TIMEOUT_>",
    "<STOP_DB_>",
    "<CREATE_DB_>",
    "<DROP_DB_>",
    "\"SHUTDOWN\"",
    "\"WITH\"",
    "\"OWNER\"",
    "\"FORCE\"",
    "\"NODES\"",
    "\"SERIAL\"",
    "\"BIGSERIAL\"",
    "\"DROP\"",
    "\"INSERT\"",
    "\"UNION\"",
    "\"COLUMN\"",
    "\"FIRST\"",
    "\"AFTER\"",
    "\"ALTER\"",
    "\"MODIFY\"",
    "\"ADD\"",
    "\"CHECK\"",
    "\"RENAME\"",
    "\"TO\"",
    "<UPDATE_STAT_>",
    "\"STATISTICS\"",
    "\"FOR\"",
    "\"SHOW\"",
    "<SHOW_AGENTS_>",
    "<SHOW_STATEMENTS_>",
    "<SHOW_DATABASES_>",
    "<SHOW_TABLES_>",
    "<SHOW_TRAN_ISOLATION_>",
    "\"SERIALIZABLE\"",
    "<REPEATABLE_READ_>",
    "<READ_COMMITTED_>",
    "<READ_UNCOMMITTED_>",
    "<ISOLATION_LEVEL_>",
    "\"BEGIN\"",
    "\"ROLLBACK\"",
    "\"COMMIT\"",
    "\"TRANSACTION\"",
    "\"TRAN\"",
    "\"WORK\"",
    "<SHOW_CONSTRAINTS_>",
    "\"DESCRIBE\"",
    "\"KILL\"",
    "\"PASSWORD\"",
    "\"DBA\"",
    "\"RESOURCE\"",
    "\"STANDARD\"",
    "\"PUBLIC\"",
    "\"GRANT\"",
    "\"REVOKE\"",
    "<OWNER_TO_>",
    "\"CAST\"",
    "\"VIEW\"",
    "<SHOW_TABLE_>",
    "<SHOW_VIEW_>",
    "<SHOW_VIEWS_>",
    "<SHOW_USERS_>",
    "\"INHERITS\"",
    "\"NO\"",
    "\"INHERIT\"",
    "\"VACUUM\"",
    "\"ANALYZE\"",
    "\"VERBOSE\"",
    "\"FREEZE\"",
    "\"LIMIT\"",
    "\"OFFSET\"",
    "\"CLUSTER\"",
    "<EXEC_>",
    "\"DIRECT\"",
    "\"EXPLAIN\"",
    "\"OIDS\"",
    "\"DELIMITER\"",
    "\"CSV\"",
    "\"QUOTE\"",
    "\"STDIN\"",
    "\"STDOUT\"",
    "<FORCE_NOT_NULL_>",
    "<FORCE_QUOTE_>",
    "\"DEALLOCATE\"",
    "\"PREPARE\"",
    "\"LOCAL\"",
    "\"GLOBAL\"",
    "<ON_COMMIT_>",
    "<PRESERVE_ROWS_>",
    "<DELETE_ROWS_>",
    "\"UNLISTEN\"",
    "\"SELECT\"",
    "\"ALL\"",
    "\"DISTINCT\"",
    "\"AS\"",
    "\"INTO\"",
    "\"WHERE\"",
    "\"FROM\"",
    "<GROUP_BY_>",
    "\"IN\"",
    "\"BETWEEN\"",
    "\"EXISTS\"",
    "\"ANY\"",
    "\"SOME\"",
    "\"NOT\"",
    "\"AND\"",
    "\"IS\"",
    "\"OR\"",
    "\"LIKE\"",
    "\"ILIKE\"",
    "<SIMILAR_TO_>",
    "\"ESCAPE\"",
    "\"OVERLAPS\"",
    "\"CASE\"",
    "\"THEN\"",
    "\"END\"",
    "\"WHEN\"",
    "\"ELSE\"",
    "\"CROSS\"",
    "\"JOIN\"",
    "\"INNER\"",
    "\"OUTER\"",
    "\"FULL\"",
    "\"USING\"",
    "\"TRUE\"",
    "\"FALSE\"",
    "\"TEMP.\"",
    "\"PUBLIC.\"",
    "\"NATURAL\"",
    "\"(+)\"",
    "\"\\\"PUBLIC\\\".\"",
    "\"+\"",
    "\"-\"",
    "<UNARY_SIGN_>",
    "\"|/\"",
    "\"||/\"",
    "\"!\"",
    "\"!!\"",
    "\"@\"",
    "\"&\"",
    "\"|\"",
    "\"#\"",
    "\"<<\"",
    "\">>\"",
    "\"~\"",
    "\"~*\"",
    "\"!~\"",
    "\"!~*\"",
    "\"BOTH\"",
    "\"LEADING\"",
    "\"TRAILING\"",
    "\"||\"",
    "\"/\"",
    "\"DIV\"",
    "\"MOD\"",
    "\"%\"",
    "\"MODULE\"",
    "\"ASC\"",
    "\"DESC\"",
    "<ORDER_BY_>",
    "\"HAVING\"",
    "\"<<=\"",
    "\">>=\"",
    "\"AVG\"",
    "\"SQRT\"",
    "\"COUNT\"",
    "\"EXTRACT\"",
    "\"MAX\"",
    "\"CURRENT_DATE\"",
    "\"CURRENT_TIME\"",
    "\"CURRENT_TIMESTAMP\"",
    "\"TRUNC\"",
    "\"TRUNCATE\"",
    "\"CURRENT_USER\"",
    "\"USER\"",
    "\"YEAR\"",
    "\"LENGTH\"",
    "\"LOWER\"",
    "\"MONTH\"",
    "\"HOUR\"",
    "\"MINUTE\"",
    "\"SECOND\"",
    "\"SUBSTRING\"",
    "\"TEMPORARY\"",
    "\"NOW\"",
    "\"ADDDATE\"",
    "\"ADDTIME\"",
    "\"DAYNAME\"",
    "\"SUBDATE\"",
    "\"SUBTIME\"",
    "\"DATEDIFF\"",
    "\"MONTHNAME\"",
    "\"DAYOFWEEK\"",
    "\"DAYOFYEAR\"",
    "\"DAYOFMONTH\"",
    "\"WEEKOFYEAR\"",
    "\"DAY\"",
    "\"QUARTER\"",
    "\"WEEK\"",
    "\"ABS\"",
    "\"CEIL\"",
    "\"CEILING\"",
    "\"EXP\"",
    "\"FLOOR\"",
    "\"LN\"",
    "\"LOG\"",
    "\"LOG10\"",
    "\"PI\"",
    "\"POWER\"",
    "\"ROUND\"",
    "\"SIGN\"",
    "\"ASIN\"",
    "\"ATAN\"",
    "\"ATAN2\"",
    "\"ATN2\"",
    "\"COS\"",
    "\"ACOS\"",
    "\"COSH\"",
    "\"COT\"",
    "\"DEGREES\"",
    "\"RADIANS\"",
    "\"SIN\"",
    "\"TAN\"",
    "\"DATABASE\"",
    "\"VALUE\"",
    "\"VERSION\"",
    "\"MIN\"",
    "\"STDDEV\"",
    "\"STDDEV_POP\"",
    "\"STDDEV_SAMP\"",
    "\"SUM\"",
    "\"VARIANCE\"",
    "<VARIANCE_POP_>",
    "<VARIANCE_SAMP_>",
    "\"ASCII\"",
    "\"INDEX\"",
    "<SHOW_INDEXES_>",
    "\"LEFT\"",
    "\"LPAD\"",
    "\"RPAD\"",
    "\"LTRIM\"",
    "\"REPLACE\"",
    "\"RIGHT\"",
    "\"RTRIM\"",
    "\"SUBSTR\"",
    "\"TRIM\"",
    "\"UPPER\"",
    "\"FIXED\"",
    "\"GREATEST\"",
    "\"LEAST\"",
    "\"INSTR\"",
    "\"SOUNDEX\"",
    "\"INITCAP\"",
    "\"LFILL\"",
    "\"MAPCHAR\"",
    "\"NUM\"",
    "\"CONCAT\"",
    "\"CURTIME\"",
    "\"CURDATE\"",
    "\"TIMEOFDAY\"",
    "\"ISFINITE\"",
    "\"DATE_TRUNC\"",
    "\"DATE_PART\"",
    "\"AGE\"",
    "\"LOCALTIME\"",
    "\"LOCALTIMESTAMP\"",
    "\"BIT_LENGTH\"",
    "\"CHAR_LENGTH\"",
    "\"CHARACTER_LENGTH\"",
    "\"CONVERT\"",
    "\"OCTET_LENGTH\"",
    "\"OVERLAY\"",
    "\"PLACING\"",
    "\"STORAGE\"",
    "\"TYPE\"",
    "\"BTRIM\"",
    "\"CHR\"",
    "\"DECODE\"",
    "\"ENCODE\"",
    "\"MD5\"",
    "\"PG_CLIENT_ENCODING\"",
    "\"QUOTE_IDENT\"",
    "\"QUOTE_LITERAL\"",
    "\"REPEAT\"",
    "\"SPLIT_PART\"",
    "\"STRPOS\"",
    "\"TO_ASCII\"",
    "\"TO_HEX\"",
    "\"TRANSLATE\"",
    "\"WIDTH_BUCKET\"",
    "\"SETSEED\"",
    "\"RANDOM\"",
    "\"CBRT\"",
    "\"GET_BIT\"",
    "\"GET_BYTE\"",
    "\"TO_DATE\"",
    "\"NVL\"",
    "\"NVL2\"",
    "\"COALESCE\"",
    "\"CLOCK_TIMESTAMP\"",
    "\"STATEMENT_TIMESTAMP\"",
    "\"TRANSACTION_TIMESTAMP\"",
    "\"NULLIF\"",
    "\"SET_BIT\"",
    "\"SET_BYTE\"",
    "\"TO_CHAR\"",
    "\"TO_NUMBER\"",
    "\"TO_TIMESTAMP\"",
    "\"ADD_MONTHS\"",
    "\"JUSTIFY_DAYS\"",
    "\"JUSTIFY_HOURS\"",
    "\"JUSTIFY_INTERVAL\"",
    "\"LAST_DAY\"",
    "\"MONTHS_BETWEEN\"",
    "\"NEXT_DAY\"",
    "\"CURRENT_DATABASE\"",
    "\"CURRENT_SCHEMA\"",
    "\"SYSDATE\"",
    "\"BIT_AND\"",
    "\"BIT_OR\"",
    "\"BOOL_AND\"",
    "\"BOOL_OR\"",
    "\"EVERY\"",
    "\"CORR\"",
    "\"COVAR_POP\"",
    "\"COVAR_SAMP\"",
    "\"REGR_AVGX\"",
    "\"REGR_AVGY\"",
    "\"REGR_COUNT\"",
    "\"REGR_INTERCEPT\"",
    "\"REGR_R2\"",
    "\"REGR_SLOPE\"",
    "\"REGR_SXX\"",
    "\"REGR_SXY\"",
    "\"REGR_SYY\"",
    "\"REGEXP_REPLACE\"",
    "\"ABBREV\"",
    "\"BROADCAST\"",
    "\"FAMILY\"",
    "\"HOST\"",
    "\"HOSTMASK\"",
    "\"MASKLEN\"",
    "\"NETMASK\"",
    "\"NETWORK\"",
    "\"SET_MASKLEN\"",
    "\"SMALLINT\"",
    "\"TINYINT\"",
    "\"INT2\"",
    "\"BIGINT\"",
    "\"INT8\"",
    "\"BIGINTEGER\"",
    "\"INT\"",
    "\"INTEGER\"",
    "\"INT4\"",
    "\"REAL\"",
    "\"SMALLFLOAT\"",
    "\"FLOAT\"",
    "\"FLOAT4\"",
    "\"FLOAT8\"",
    "\"DECIMAL\"",
    "\"NUMERIC\"",
    "\"SMALLMONEY\"",
    "\"MONEY\"",
    "\"NUMBER\"",
    "\"CHAR\"",
    "\"CHARACTER\"",
    "\"VARCHAR\"",
    "\"TINYTEXT\"",
    "\"VARCHAR2\"",
    "\"DATE\"",
    "\"TIME\"",
    "\"TIMESTAMP\"",
    "<WITH_TIMEZONE_>",
    "<WITHOUT_TIMEZONE_>",
    "\"DATETIME\"",
    "\"SMALLDATETIME\"",
    "\"DEC\"",
    "<DOUBLE_PRECISION_>",
    "\"NCHAR\"",
    "\"NATIONAL\"",
    "\"VARYING\"",
    "<BOOLEAN_>",
    "\"INTERVAL\"",
    "\"TEXT\"",
    "\"MEDIUMTEXT\"",
    "\"LONG\"",
    "\"LVARCHAR\"",
    "\"LONG VARCHAR\"",
    "\"LONGTEXT\"",
    "\"CLOB\"",
    "\"BYTEA\"",
    "\"BLOB\"",
    "\"VARBINARY\"",
    "\"LONG RAW\"",
    "\"RAW\"",
    "\"BYTE\"",
    "\"IMAGE\"",
    "\"BIT\"",
    "\"BITVARYING\"",
    "\"VARBIT\"",
    "\"\\\"\"",
    "\"MACADDR\"",
    "\"CIDR\"",
    "\"INET\"",
    "<YEAR_FROM>",
    "<QUARTER_FROM>",
    "<MONTH_FROM>",
    "<WEEK_FROM>",
    "<DAY_FROM>",
    "<DOY_FROM>",
    "<DOW_FROM>",
    "<DECADE_FROM>",
    "<CENTURY_FROM>",
    "<HOUR_FROM>",
    "<MINUTE_FROM>",
    "<SECOND_FROM>",
    "<MILLISECOND_FROM>",
    "<MILLENNIUM_FROM>",
    "<MICROSECONDS_FROM>",
    "<EPOCH_FROM>",
    "\"POSITION\"",
    "\"VALUES\"",
    "<SINGLEDIGIT>",
    "<INT_LITERAL>",
    "<DECIMAL_LITERAL>",
    "<SCIENTIFIC_LITERAL>",
    "<STRING_LITERAL>",
    "<PARAM_PLACE_HOLDER>",
    "<INTERVAL_LITERAL>",
    "<DATE_LITERAL>",
    "<TIME_LITERAL>",
    "<TIMESTAMP_LITERAL>",
    "<TEXT_LITERAL>",
    "<INTEGER_LITERAL>",
    "<MACADDR_LITERAL>",
    "<CIDR_LITERAL>",
    "<INET_LITERAL>",
    "<BINARY_LITERAL>",
    "<HEXDECIMAL_LITERAL>",
    "\"(\"",
    "\")\"",
    "\";\"",
    "\"*\"",
    "<LETTER>",
    "<IDENTIFIER>",
    "<QUOTED_IDENTIFIER>",
    "\",\"",
    "\"=\"",
    "\".\"",
    "\"::\"",
    "\"!=\"",
    "\"<>\"",
    "\">\"",
    "\">=\"",
    "\"<\"",
    "\"<=\"",
  };

}
